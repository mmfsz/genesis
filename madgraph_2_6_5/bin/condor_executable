#!/bin/bash

# Parse the arguments
CEPHUSER=$1
CMSSWVERSION=$2
SCRAMARCH=$3

function getjobad {
    grep -i "^$1" "$_CONDOR_JOB_AD" | cut -d= -f2- | xargs echo
}
function setup_chirp {
    if [ -e ./condor_chirp ]; then
    # Note, in the home directory
        mkdir chirpdir
        mv condor_chirp chirpdir/
        export PATH="$PATH:$(pwd)/chirpdir"
        echo "[chirp] Found and put condor_chirp into $(pwd)/chirpdir"
    elif [ -e /usr/libexec/condor/condor_chirp ]; then
        export PATH="$PATH:/usr/libexec/condor"
        echo "[chirp] Found condor_chirp in /usr/libexec/condor"
    else
        echo "[chirp] No condor_chirp :("
    fi
}
function chirp {
    # Note, $1 (the classad name) must start with Chirp
    condor_chirp set_job_attr_delayed $1 $2
    ret=$?
    echo "[chirp] Chirped $1 => $2 with exit code $ret"
}
function stageout {
    COPY_SRC=$1
    COPY_DST=$2
    COPY_STATUS=1
    retries=0
    until [ $retries -ge 10 ]
    do
        echo "Stageout attempt $((retries+1)): env -i X509_USER_PROXY=${X509_USER_PROXY} gfal-copy -p -f -t 7200 --verbose --checksum ADLER32 ${COPY_SRC} ${COPY_DST}"
        env -i X509_USER_PROXY=${X509_USER_PROXY} gfal-copy -p -f -t 7200 --verbose --checksum ADLER32 ${COPY_SRC} ${COPY_DST}
        COPY_STATUS=$?
        if [ $COPY_STATUS -ne 0 ]; then
            echo "Failed stageout attempt $((retries+1))"
        else
            echo "Successful stageout with $retries retries"
            break
        fi
        retries=$[$retries+1]
        echo "Sleeping for 5m"
        sleep 5m
    done
    if [ $COPY_STATUS -ne 0 ]; then
        echo "Removing output file because gfal-copy crashed with code $COPY_STATUS"
        env -i X509_USER_PROXY=${X509_USER_PROXY} gfal-rm --verbose ${COPY_DST}
        REMOVE_STATUS=$?
        if [ $REMOVE_STATUS -ne 0 ]; then
            echo "Uhh, gfal-copy crashed and then the gfal-rm also crashed with code $REMOVE_STATUS"
            echo "You probably have a corrupt file sitting on hadoop now."
            exit 1
        fi
    fi
}

# Fetch custom ClassAds values
SCITOKENFILENAME="$(getjobad SciTokenFilename)"
TAG="$(getjobad tag)"

if [[ "${SCITOKENFILENAME}" != "" ]]; then
    export BEARER_TOKEN_FILE="$PWD/$SCITOKENFILENAME"
fi

setup_chirp

echo -e "\n--- begin header output ---\n" #                     <----- section division

echo "CEPHUSER: $CEPHUSER"
echo "CMSSWVERSION: $CMSSWVERSION"
echo "SCRAMARCH: $SCRAMARCH"
echo "BEARER_TOKEN_FILE: $BEARER_TOKEN_FILE"
echo "GLIDEIN_CMSSite: $GLIDEIN_CMSSite"
echo "hostname: $(hostname)"
echo "uname -a: $(uname -a)"
echo "time: $(date +%s)"
echo "args: $@"

echo -e "\n--- end header output ---\n" #                       <----- section division

echo "before unpacking: ls -lrth"
ls -lrth 

if [ -r "$OSGVO_CMSSW_Path"/cmsset_default.sh ]; then
    echo "sourcing environment: source $OSGVO_CMSSW_Path/cmsset_default.sh"
    source "$OSGVO_CMSSW_Path"/cmsset_default.sh
elif [ -r "$OSG_APP"/cmssoft/cms/cmsset_default.sh ]; then
    echo "sourcing environment: source $OSG_APP/cmssoft/cms/cmsset_default.sh"
    source "$OSG_APP"/cmssoft/cms/cmsset_default.sh
elif [ -r /cvmfs/cms.cern.ch/cmsset_default.sh ]; then
    echo "sourcing environment: source /cvmfs/cms.cern.ch/cmsset_default.sh"
    source /cvmfs/cms.cern.ch/cmsset_default.sh
else
    echo "ERROR! Couldn't find $OSGVO_CMSSW_Path/cmsset_default.sh or /cvmfs/cms.cern.ch/cmsset_default.sh or $OSG_APP/cmssoft/cms/cmsset_default.sh"
    exit 1
fi

# Setup environment and build
for tarball in $(ls *.tar.gz); do
    tar -zxvf $tarball
done
cd workdir

echo "before running: ls -lrth"
ls -lrth 

echo -e "\n--- begin running ---\n" #                           <----- section division

# Make gridpacks
for carddir in $(ls -d cards/*/); do
    sample=$(basename $carddir)

    sh make_gridpack.sh -n $sample -q local -m models $carddir

    run_status=$?
    if [[ $run_status != 0 ]]; then
        echo "Removing output because make_gridpacks.sh crashed with exit code $?"
        rm *.tar.gz
        exit 1
        break
    fi

    if [[ "$TAG" != "" ]]; then
        output_tarball=${sample}_${SCRAMARCH}_${CMSSWVERSION}_${TAG}_tarball.tar.xz
    else
        output_tarball=${sample}_${SCRAMARCH}_${CMSSWVERSION}_tarball.tar.xz
    fi
    # Copying the output file
    copy_src="file://$PWD/${sample}_${SCRAMARCH}_${CMSSWVERSION}_tarball.tar.xz"
    copy_dst="davs://redirector.t2.ucsd.edu:1095//store/user/$CEPHUSER/gridpacks/$output_tarball"
    stageout $copy_src $copy_dst
done

echo -e "\n--- end running ---\n" #                             <----- section division

echo "after running: ls -lrth"
ls -lrth

echo -e "\n--- begin cleaning area ---\n" #                    <----- section division

cd ..
rm -rf workdir

echo -e "\n--- end cleaning output ---\n" #                    <----- section division
